services:
  mcsd-consumer:
    build:
      context: ../
      dockerfile: docker/Dockerfile
      args:
        NEW_UID: ${NEW_UID:-1000}
        NEW_GID: ${NEW_GID:-1000}
    ports:
      - "8509:8509"
    volumes:
      - ../app:/src/app
      - ../docker:/src/docker
      - ../seeds:/src/seeds
      - ../sql:/src/sql
      - ../tests:/src/tests
      - ../tools:/src/tools
      - ../secrets:/src/secrets
      - ../poetry.lock:/src/poetry.lock
      - ../pyproject.toml:/src/pyproject.toml
      - ../Makefile:/src/Makefile
      - ../README.md:/src/README.md
    configs:
      - source: mcsd_consumer_conf
        target: /src/app.conf
      - source: supplier_urls_json
        target: /src/supplier_urls.json
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8509/health" ]
      start_period: 30s
      interval: 30m
    depends_on:
      postgres:
        condition: service_healthy
      hapi-consumer-health:
        condition: service_healthy
      hapi-supplier-health:
        condition: service_healthy
    stop_signal: SIGKILL
    networks:
      - mcsd_consumer_net

  hapi-consumer:
    image: "hapiproject/hapi:latest"
    ports:
      - "8081:8081"
    configs:
      - source: hapi_consumer_config
        target: /app/config/application.yaml
    depends_on:
      - postgres
    networks:
      - mcsd_consumer_net
  
  hapi-supplier:
    image: "hapiproject/hapi:latest"
    ports:
      - "8080:8080"
    configs:
      - source: hapi_supplier_config
        target: /app/config/application.yaml
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcsd_consumer_net

  hapi-consumer-health:
    image: curlimages/curl
    healthcheck:
      test: ["CMD", "curl", "-f", "http://hapi-consumer:8081/actuator/health"]
      start_period: 100s
      start_interval: 5s
    depends_on:
      - hapi-consumer
    stop_signal: SIGKILL
    networks:
      - mcsd_consumer_net
    command: sleep infinity

  hapi-supplier-health:
    image: curlimages/curl
    healthcheck:
      test: ["CMD", "curl", "-f", "http://hapi-supplier:8080/actuator/health"]
      start_period: 100s
      start_interval: 5s
    depends_on:
      - hapi-supplier
    stop_signal: SIGKILL
    networks:
      - mcsd_consumer_net
    command: sleep infinity
  
  postgres:
    image: postgres:15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --user postgres"]
      start_period: 30s
      interval: 30m
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./create-dbs.sql:/docker-entrypoint-initdb.d/create-db.sql
    networks:
      - mcsd_consumer_net

configs:
  hapi_supplier_config:
    file: supplier.application.yaml
  mcsd_consumer_conf:
    file: app.conf
  supplier_urls_json:
    file: supplier_urls.json
  hapi_consumer_config:
    file: consumer.application.yaml

networks:
  mcsd_consumer_net:
    driver: bridge
    name: mcsd_consumer_net