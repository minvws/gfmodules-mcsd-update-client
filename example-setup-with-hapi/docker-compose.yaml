services:
  mcsd-update-client:
    build:
      context: ../
      dockerfile: docker/Dockerfile
      args:
        NEW_UID: ${NEW_UID:-1000}
        NEW_GID: ${NEW_GID:-1000}
    ports:
      - "8509:8509"
    environment:
      DO_NOT_USE_ON_PRODUCTION: "I'm a fool if I run this application on a production environment."
    volumes:
      - ../app:/src/app
      - ../docker:/src/docker
      - ../seeds:/src/seeds
      - ../sql:/src/sql
      - ../tests:/src/tests
      - ../tools:/src/tools
      - ../secrets:/src/secrets
      - ../poetry.lock:/src/poetry.lock
      - ../pyproject.toml:/src/pyproject.toml
      - ../Makefile:/src/Makefile
      - ../README.md:/src/README.md
    configs:
      - source: mcsd_update_client_conf
        target: /src/app.conf
      - source: directory_urls_json
        target: /src/directory_urls.json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8509/health"]
      start_period: 30s
      interval: 30m
    depends_on:
      postgres:
        condition: service_healthy
      hapi-update-client-health:
        condition: service_healthy
      hapi-directory-health:
        condition: service_healthy
    stop_signal: SIGKILL
    networks:
      - mcsd_update_client_net

  hapi-update-client:
    image: "hapiproject/hapi:latest"
    ports:
      - "8081:8081"
    configs:
      - source: hapi_update_client_config
        target: /app/config/application.yaml
    depends_on:
      - postgres
    networks:
      - mcsd_update_client_net

  hapi-directory:
    image: "hapiproject/hapi:latest"
    ports:
      - "8080:8080"
    configs:
      - source: hapi_directory_config
        target: /app/config/application.yaml
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcsd_update_client_net

  hapi-update-client-health:
    image: curlimages/curl
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://hapi-update-client:8081/actuator/health",
        ]
      start_period: 100s
      start_interval: 5s
    depends_on:
      - hapi-update-client
    stop_signal: SIGKILL
    networks:
      - mcsd_update_client_net
    command: sleep infinity

  hapi-directory-health:
    image: curlimages/curl
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://hapi-directory:8080/actuator/health",
        ]
      start_period: 100s
      start_interval: 5s
    depends_on:
      - hapi-directory
    stop_signal: SIGKILL
    networks:
      - mcsd_update_client_net
    command: sleep infinity

  redis:
    image: redis:latest
    restart: "no"
    command: ["redis-server", "--port", "16379"]
    ports:
      - "16379:16379"
    networks:
      mcsd_update_client_net:
        aliases:
          - external-cache

  postgres:
    image: postgres:15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --user postgres"]
      start_period: 30s
      interval: 30m
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./create-dbs.sql:/docker-entrypoint-initdb.d/create-db.sql
    networks:
      - mcsd_update_client_net

configs:
  hapi_directory_config:
    file: directory.application.yaml
  mcsd_update_client_conf:
    file: app.conf
  directory_urls_json:
    file: directory_urls.json
  hapi_update_client_config:
    file: client.application.yaml

networks:
  mcsd_update_client_net:
    driver: bridge
    name: mcsd_update_client_net
