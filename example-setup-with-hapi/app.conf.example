[app]
# Loglevel can be one of: debug, info, warning, error, critical
loglevel=debug

[database]
# Dsn for database connection
dsn=postgresql+psycopg://postgres:postgres@postgres:5432/postgres
create_tables=false
retry_backoff=0.1, 0.2, 0.4, 0.8, 1.6, 3.2, 4.8, 6.4, 10.0
pool_size=5
max_overflow=10
pool_pre_ping=False
pool_recycle=1800

[scheduler]
# delay time for scheduled update to run, value should be number with a unit of time (only s, m, h)
delay_input = 30s
# maximum number of entries in logs
max_logs_entries = 1000
# background updates automatically start on bootstrap
automatic_background_update = True
# background cleanup automatically start on bootstrap
automatic_background_cleanup = True

[telemetry]
# Telemetry is enabled or not
enabled = False
# Endpoint to GRPC server for telemetry
endpoint = http://tracing:4317
# Service name to use
service_name = mcsd_update_client
# Tracer name to use
tracer_name = service.mcsd_update_client

[external_cache]
# external cache host
host = external-cache

# external cache port number
port = 16379
# SSL settings, to create a TLS connection to the redis store.
enable_debugger = False
ssl = False
key =
cert =
cafile =
check_hostname = True

# object time to live in in cache store
object_ttl = 600
# default cache namespace
default_cache_namespace = mcsd

[stats]
# Statsd is enabled or not
enabled = False
# Host for statsd server
host = 127.0.0.1
# Port for statsd server
port = 8125
# Module name to use
module_name = mcsd_update_client

[uvicorn]
swagger_enabled = True
docs_url = /docs
redoc_url = /redocs
host = 0.0.0.0
port = 8509
reload = True

use_ssl = False
ssl_base_dir = secrets/ssl
ssl_cert_file = server.cert
ssl_key_file = server.key

[mcsd]
update_client_url = http://addressing-app:8502
# authentication can be either "off", or "azure_oauth2" in case of azure oauth2 authentication
authentication = off
# When configured, all connections to the supplier register and mCSD FHIR directories will use mTLS
# Path to client certificate file for mTLS authentication
mtls_client_cert_path = client.crt
# Path to client private key file for mTLS authentication
mtls_client_key_path = client.key
# Path to CA certificate file for server verification
mtls_server_ca_path = ca.crt

# query parameter for the number of entries in Bundle per request (limit)
# This is usually used in the directory request service and not directory API (LRZa)
request_count = 20
# choose whether to fill required mCSD fields with placeholders or
# let the app handle the validations.
fill_required_fields = False

[azure_oauth2]
# Token url is the url of the oauth2 endpoint of the microsoft services
token_url =
# Given client ID of the application
client_id =
# Given client secret of the application
client_secret =
# Resource of the application. Most likely the update_client url
resource =

[aws]
# Profile to use for aws authentication
profile =
# Region of the healthlake
region = eu-west-2

[client_directory]
# Directories provider url to fetch directory endpoints from
directories_provider_url=
# OR use a relative path that points to file that specifies which directories to use. See example file directory_urls.example.json
directories_file_path = directory_urls.example.json
# Timeout for the directory api
timeout = 10
# Backoff time for the directory api
backoff = 0.4

# Time since last successful update before marking directory as unhealthy
directory_marked_as_unhealthy_after_success_timeout=5m

# Time since last successful update before ignoring directory
ignore_client_directory_after_success_timeout=30m

# Consecutive failed attempts before ignoring directory
ignore_client_directory_after_failed_attempts_threshold=20

# Time since last successful update before marking directory as to be deleted
mark_client_directory_as_deleted_after_success_timeout=10d

# Mark directory as to be deleted when removed from LRZA
mark_client_directory_as_deleted_after_lrza_delete=True

# Delay after directory marked as to be deleted before permanent cleanup
cleanup_delay_after_client_directory_marked_deleted=30d

# Whether to validate the capability statement when retrieving them from the directory provider
check_capability_statement = False
